class User(AbstractBaseUser):

    username = None
    USERNAME_FIELD = 'User_ID'
    REQUIRED_FIELDS = ['User_ID', 'Email', 'Name', 'Password']

    # email = LowercaseEmailField(_('email address'), unique=True)
    is_staff = models.BooleanField(default=False)
    is_active = models.BooleanField(default=True)
    is_teacher = models.BooleanField(default=False)
    is_student = models.BooleanField(default=True)
    date_joined = models.DateTimeField(default=timezone.now)

    # if you require phone number field in your project
    phone_regex = RegexValidator(
        regex=r'^\d{10}$', message="phone number should exactly be in 10 digits")
    phone = models.CharField(max_length=255, validators=[
                             phone_regex], blank=True, null=True)  # you can set it unique = True

    # is_customer = models.BooleanField(default=True)
    # is_seller = models.BooleanField(default = False)

    Name = models.CharField(max_length=255)
    Email = models.CharField(max_length=100, unique=True)
    User_ID = models.IntegerField(unique=True, primary_key=True)
    Institute_ID = models.IntegerField()
    Institute_Name = models.CharField(max_length=255, blank=True, null=True)
    # Password = models.CharField(max_length=30)
    # object = StudentManager
    student_prof = models.ForeignKey('student.Student')
    teacher_prof = models.ForeignKey('teacher.Teacher')

    def __str__(self):
        return (self.User_ID, self.Name)
